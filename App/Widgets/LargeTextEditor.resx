<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="warningIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>