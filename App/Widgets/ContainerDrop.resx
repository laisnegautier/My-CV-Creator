<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="favButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DBr0P1dlKC1dTkOSAAAAAElFTkSuQmCC
</value>
  </data>
</root>